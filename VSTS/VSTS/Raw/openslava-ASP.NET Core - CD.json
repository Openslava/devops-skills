{
  "source": 2,
  "id": 2,
  "revision": 14,
  "name": "openslava-ASP.NET Core - CD",
  "description": null,
  "createdBy": {
    "id": "26b1d1d5-09ce-4bee-ab3d-cbaacba82e27",
    "displayName": "Viliam Batka Name",
    "uniqueName": "viliam@batka.name",
    "url": "https://app.vssps.visualstudio.com/Abef25e8f-e084-44c1-a3af-af50ead1cdd4/_apis/Identities/26b1d1d5-09ce-4bee-ab3d-cbaacba82e27",
    "imageUrl": "https://openslava.visualstudio.com/_api/_common/identityImage?id=26b1d1d5-09ce-4bee-ab3d-cbaacba82e27"
  },
  "createdOn": "2017-10-01T21:38:16.360Z",
  "modifiedBy": {
    "id": "26b1d1d5-09ce-4bee-ab3d-cbaacba82e27",
    "displayName": "Viliam Batka Name",
    "uniqueName": "viliam@batka.name",
    "url": "https://app.vssps.visualstudio.com/Abef25e8f-e084-44c1-a3af-af50ead1cdd4/_apis/Identities/26b1d1d5-09ce-4bee-ab3d-cbaacba82e27",
    "imageUrl": "https://openslava.visualstudio.com/_api/_common/identityImage?id=26b1d1d5-09ce-4bee-ab3d-cbaacba82e27"
  },
  "modifiedOn": "2017-10-03T15:39:35.270Z",
  "path": "\\",
  "variables": {},
  "variableGroups": [],
  "environments": [
    {
      "id": 5,
      "name": "CD to Azure ASPCoreD1",
      "rank": 1,
      "owner": {
        "id": "26b1d1d5-09ce-4bee-ab3d-cbaacba82e27",
        "displayName": "Viliam Batka Name",
        "uniqueName": "viliam@batka.name",
        "url": "https://app.vssps.visualstudio.com/Abef25e8f-e084-44c1-a3af-af50ead1cdd4/_apis/Identities/26b1d1d5-09ce-4bee-ab3d-cbaacba82e27",
        "imageUrl": "https://openslava.visualstudio.com/_api/_common/identityImage?id=26b1d1d5-09ce-4bee-ab3d-cbaacba82e27"
      },
      "variables": {},
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 15
          }
        ]
      },
      "deployStep": {
        "tasks": [],
        "id": 16
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 17
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": { "parallelExecutionType": "none" },
            "skipArtifactsDownload": false,
            "queueId": 8,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Run on agent",
          "workflowTasks": [
            {
              "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
              "version": "3.*",
              "name": "Deploy Azure App Service",
              "refName": "AzureRmWebAppDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": null,
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "WebAppName": "$(Parameters.WebAppName)",
                "WebAppKind": "$(Parameters.WebAppKind)",
                "DeployToSlotFlag": "false",
                "ResourceGroupName": "",
                "SlotName": "",
                "ImageSource": "Registry",
                "DockerNamespace": "$(Parameters.DockerNamespace)",
                "DockerRepository": "$(Parameters.DockerRepository)",
                "DockerImageTag": "$(Build.BuildId)",
                "VirtualApplication": "",
                "Package": "$(System.DefaultWorkingDirectory)\\**\\*.zip",
                "BuiltinLinuxPackage": "$(System.DefaultWorkingDirectory)/**/*.zip",
                "RuntimeStack": "node|4.4",
                "StartupCommand": "",
                "WebAppUri": "",
                "ScriptType": "",
                "InlineScript": "",
                "ScriptPath": "",
                "GenerateWebConfig": "false",
                "WebConfigParameters": "",
                "AppSettings": "",
                "TakeAppOfflineFlag": "true",
                "UseWebDeploy": "false",
                "SetParametersFile": "",
                "RemoveAdditionalFilesFlag": "false",
                "ExcludeFilesFromAppDataFlag": "false",
                "AdditionalArguments": "",
                "RenameFilesFlag": "true",
                "XmlTransformation": "false",
                "XmlVariableSubstitution": "false",
                "JSONFiles": ""
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true
      },
      "demands": [],
      "conditions": [
        {
          "name": "ReleaseStarted",
          "conditionType": 1,
          "value": ""
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
        "inputs": [
          {
            "options": {},
            "properties": {},
            "name": "ConnectedServiceName",
            "label": "Azure subscription",
            "defaultValue": "506aab2a-4552-467a-9098-f40bf7782cce",
            "required": true,
            "type": "connectedService:AzureRM",
            "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment.",
            "visibleRule": "",
            "groupName": ""
          },
          {
            "options": {},
            "properties": { "EditableOptions": "True" },
            "name": "WebAppName",
            "label": "App service name",
            "defaultValue": "ASPCoreD1",
            "required": true,
            "type": "pickList",
            "helpMarkDown": "Enter or select the name of an existing Azure App Service.",
            "visibleRule": "",
            "groupName": ""
          },
          {
            "options": {},
            "properties": {
              "EditableOptions": "false",
              "PopulateDefaultValue": "true"
            },
            "name": "WebAppKind",
            "label": "Web app kind",
            "defaultValue": "app",
            "type": "pickList",
            "helpMarkDown": "",
            "visibleRule": "WebAppName = invalidwebappname",
            "groupName": ""
          },
          {
            "options": {},
            "properties": {},
            "name": "DockerNamespace",
            "label": "Registry or Namespace",
            "defaultValue": "",
            "required": true,
            "type": "string",
            "helpMarkDown": "A globally unique top-level domain name for your specific registry or namespace.<br/> Note: Fully qualified image name will be of the format: '<b>`<registry or namespace`></b>/`<repository`>:`<tag`>'. For example, '<b>myregistry.azurecr.io</b>/nginx:latest'.",
            "visibleRule": "WebAppKind = applinux",
            "groupName": ""
          },
          {
            "options": {},
            "properties": {},
            "name": "DockerRepository",
            "label": "Repository",
            "defaultValue": "",
            "required": true,
            "type": "string",
            "helpMarkDown": "Name of the repository where the container images are stored.<br/> Note: Fully qualified image name will be of the format: '`<registry or namespace`>/<b>`<repository`></b>:`<tag`>'. For example, 'myregistry.azurecr.io/<b>nginx</b>:latest'.",
            "visibleRule": "WebAppKind = applinux",
            "groupName": ""
          }
        ],
        "dataSourceBindings": [
          {
            "dataSourceName": "AzureRMWebAppNames",
            "parameters": {},
            "endpointId": "$(ConnectedServiceName)",
            "target": "WebAppName"
          },
          {
            "dataSourceName": "AzureAppKind",
            "parameters": { "WebAppName": "$(WebAppName)" },
            "endpointId": "$(ConnectedServiceName)",
            "target": "WebAppKind",
            "resultTemplate": "{\"Value\":\"{{{ #stringReplace ',' '' kind }}}\",\"DisplayValue\":\"{{{ #stringReplace ',' '' kind }}}\"}"
          }
        ]
      },
      "properties": {}
    },
    {
      "id": 6,
      "name": "CD to AWS ASPCore",
      "rank": 2,
      "owner": {
        "id": "26b1d1d5-09ce-4bee-ab3d-cbaacba82e27",
        "displayName": "Viliam Batka Name",
        "uniqueName": "viliam@batka.name",
        "url": "https://app.vssps.visualstudio.com/Abef25e8f-e084-44c1-a3af-af50ead1cdd4/_apis/Identities/26b1d1d5-09ce-4bee-ab3d-cbaacba82e27",
        "imageUrl": "https://openslava.visualstudio.com/_api/_common/identityImage?id=26b1d1d5-09ce-4bee-ab3d-cbaacba82e27"
      },
      "variables": {},
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 18
          }
        ]
      },
      "deployStep": {
        "tasks": [],
        "id": 19
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 20
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": { "parallelExecutionType": "none" },
            "skipArtifactsDownload": false,
            "queueId": 8,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Run on agent",
          "workflowTasks": [
            {
              "taskId": "1399d161-270d-4ee9-b913-78b177165406",
              "version": "1.*",
              "name": "Deploy to Elastic Beanstalk:  ASPCore",
              "refName": "BeanstalkDeployApplication1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "awsCredentials": "3ec9dd67-0f85-464d-9817-6efa7d8923c1",
                "regionName": "eu-central-1",
                "applicationType": "aspnetCoreWindows",
                "webDeploymentArchive": "$(System.DefaultWorkingDirectory)/openslava-ASP.NET Core-CI/drop/ASPCore.zip",
                "dotnetPublishPath": "$(System.DefaultWorkingDirectory)/openslava-ASP.NET Core-CI/drop/ASPCore.zip",
                "applicationName": "ASPCore",
                "environmentName": "openslava-aws-aspcore"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true
      },
      "demands": [],
      "conditions": [
        {
          "name": "CD to Azure ASPCoreD1",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
        "dataSourceBindings": [
          {
            "dataSourceName": "AzureRMWebAppNames",
            "parameters": {},
            "endpointId": "$(ConnectedServiceName)",
            "target": "WebAppName"
          },
          {
            "dataSourceName": "AzureAppKind",
            "parameters": { "WebAppName": "$(WebAppName)" },
            "endpointId": "$(ConnectedServiceName)",
            "target": "WebAppKind",
            "resultTemplate": "{\"Value\":\"{{{ #stringReplace ',' '' kind }}}\",\"DisplayValue\":\"{{{ #stringReplace ',' '' kind }}}\"}"
          }
        ]
      },
      "properties": {}
    }
  ],
  "artifacts": [
    {
      "sourceId": "1f800f8d-9108-4cd2-ad95-ba43001fd97e:3",
      "type": "Build",
      "alias": "openslava-ASP.NET Core-CI",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://openslava.visualstudio.com/_permalink/_build/index?collectionId=703c0829-b8b2-44f6-97e2-00f6bd8cb6cd&projectId=1f800f8d-9108-4cd2-ad95-ba43001fd97e&definitionId=3",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "",
          "name": ""
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestType",
          "name": "Latest"
        },
        "definition": {
          "id": "3",
          "name": "openslava-ASP.NET Core-CI"
        },
        "project": {
          "id": "1f800f8d-9108-4cd2-ad95-ba43001fd97e",
          "name": "openslava"
        }
      },
      "isPrimary": true
    }
  ],
  "triggers": [],
  "releaseNameFormat": "Release-$(rev:r)",
  "url": "https://openslava.vsrm.visualstudio.com/1f800f8d-9108-4cd2-ad95-ba43001fd97e/_apis/Release/definitions/2",
  "_links": {
    "self": { "href": "https://openslava.vsrm.visualstudio.com/1f800f8d-9108-4cd2-ad95-ba43001fd97e/_apis/Release/definitions/2" },
    "web": { "href": "https://openslava.visualstudio.com/1f800f8d-9108-4cd2-ad95-ba43001fd97e/_release?definitionId=2" }
  },
  "tags": [],
  "properties": {}

}